{"Structs/Parser.html#/s:14FootlessParser0B0V13ParseFunctiona":{"name":"ParseFunction","abstract":"<p>Undocumented</p>","parent_name":"Parser"},"Structs/Parser.html#/s:14FootlessParser0B0V5parseyq_6output_s13AnyCollectionVyxG9remaindertAHKcvp":{"name":"parse","abstract":"<p>Undocumented</p>","parent_name":"Parser"},"Structs/Parser.html#/s:14FootlessParser0B0V5parseACyxq_Gq_6output_s13AnyCollectionVyxG9remaindertAIKc_tcfc":{"name":"init(parse:)","abstract":"<p>Undocumented</p>","parent_name":"Parser"},"Structs/Parser.html":{"name":"Parser","abstract":"<p>Undocumented</p>"},"Functions.html#/s:14FootlessParser6extendyq_xcq_7ElementQy_RszSmR_r0_lF":{"name":"extend(_:)","abstract":"<p>Return a collection containing x and all elements of xs. Works with strings and arrays.</p>"},"Functions.html#/s:14FootlessParser6extendyq_q_cx7ElementQy_RszSmR_r0_lF":{"name":"extend(_:)","abstract":"<p>Return a collection containing x and all elements of xs. Works with strings and arrays.</p>"},"Functions.html#/s:14FootlessParser6extendyxq_cxSmRzSlR_7ElementQy_ACRtzr0_lF":{"name":"extend(_:)","abstract":"<p>Join 2 collections together.</p>"},"Functions.html#/s:14FootlessParser5tupleyx_q_tq_cxr0_lF":{"name":"tuple(_:)","abstract":"<p>Create a tuple of the arguments.</p>"},"Functions.html#/s:14FootlessParser5tupleyx_q_q0_tq0_cq_cxr1_lF":{"name":"tuple(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:14FootlessParser5tupleyx_q_q0_q1_tq1_cq0_cq_cxr2_lF":{"name":"tuple(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:14FootlessParser5tupleyx_q_q0_q1_q2_tq2_cq1_cq0_cq_cxr3_lF":{"name":"tuple(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:14FootlessParser5curryyq0_q_cxcq0_x_q_tcr1_lF":{"name":"curry(_:)","abstract":"<p>Create a curried function of a normal function.</p>"},"Functions.html#/s:14FootlessParser5curryyq1_q0_cq_cxcq1_x_q_q0_tcr2_lF":{"name":"curry(_:)","abstract":"<p>Create a curried function of a normal function.</p>"},"Functions.html#/s:14FootlessParser5curryyq2_q1_cq0_cq_cxcq2_x_q_q0_q1_tcr3_lF":{"name":"curry(_:)","abstract":"<p>Create a curried function of a normal function.</p>"},"Functions.html#/s:14FootlessParser5curryyq3_q2_cq1_cq0_cq_cxcq3_x_q_q0_q1_q2_tcr4_lF":{"name":"curry(_:)","abstract":"<p>Create a curried function of a normal function.</p>"},"Functions.html#/s:14FootlessParser3ggsoiyAA0B0Vyxq0_GADyxq_G_AEq_Kctr1_lF":{"name":">>-(_:_:)","abstract":"<p>FlatMap a function over a parser.</p>"},"Functions.html#/s:14FootlessParser3lxgoiyAA0B0Vyxq0_Gq0_q_Kc_ADyxq_Gtr1_lF":{"name":"<^>(_:_:)","abstract":"<p>Map a function over a parser</p>"},"Functions.html#/s:14FootlessParser3lmgoiyAA0B0Vyxq0_GADyxq0_q_cG_ADyxq_Gtr1_lF":{"name":"<*>(_:_:)","abstract":"<p>Apply a parser returning a function to another parser.</p>"},"Functions.html#/s:14FootlessParser2lmoiyAA0B0Vyxq_GAE_ADyxq0_Gtr1_lF":{"name":"<*(_:_:)","abstract":"<p>Apply both parsers, but only return the output from the first one.</p>"},"Functions.html#/s:14FootlessParser2mgoiyAA0B0Vyxq0_GADyxq_G_AEtr1_lF":{"name":"*>(_:_:)","abstract":"<p>Apply both parsers, but only return the output from the 2nd one.</p>"},"Functions.html#/s:14FootlessParser4pureyAA0B0Vyxq_Gq_r0_lF":{"name":"pure(_:)","abstract":"<p>Create a parser which doesn&rsquo;t consume input and returns this parameter.</p>"},"Functions.html#/s:14FootlessParser3logoiyAA0B0Vyxq_GAE_AEtr0_lF":{"name":"<|>(_:_:)","abstract":"<p>Apply one of 2 parsers.</p>"},"Functions.html#/s:14FootlessParser7satisfy6expect9conditionAA0B0VyxxGSSyXA_SbxctlF":{"name":"satisfy(expect:condition:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:14FootlessParser5tokenyAA0B0VyxxGxSQRzlF":{"name":"token(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:14FootlessParser6tokensyAA0B0Vyxq_Gq_SQRz7ElementQy_RszSlR_r0_lF":{"name":"tokens(_:)","abstract":"<p>Match several tokens in a row.</p>"},"Functions.html#/s:14FootlessParser3anyAA0B0VyxxGylF":{"name":"any()","abstract":"<p>Return whatever the next token is.</p>"},"Functions.html#/s:14FootlessParser8optional_9otherwiseAA0B0Vyxq_GAF_q_tr0_lF":{"name":"optional(_:otherwise:)","abstract":"<p>Try parser, if it fails return &lsquo;otherwise&rsquo; without consuming input.</p>"},"Functions.html#/s:14FootlessParser8optionalyAA0B0Vyxq_SgGADyxq_Gr0_lF":{"name":"optional(_:)","abstract":"<p>Try parser, if it fails return nil without consuming input.</p>"},"Functions.html#/s:14FootlessParser4lazyyAA0B0Vyxq_GAEyXAr0_lF":{"name":"lazy(_:)","abstract":"<p>Delay creation of parser until it is needed.</p>"},"Functions.html#/s:14FootlessParser9oneOrMoreyAA0B0VyxSayq_GGADyxq_Gr0_lF":{"name":"oneOrMore(_:)","abstract":"<p>Apply parser once, then repeat until it fails. Returns an array of the results.</p>"},"Functions.html#/s:14FootlessParser10zeroOrMoreyAA0B0VyxSayq_GGADyxq_Gr0_lF":{"name":"zeroOrMore(_:)","abstract":"<p>Repeat parser until it fails. Returns an array of the results.</p>"},"Functions.html#/s:14FootlessParser5countyAA0B0VyxSayq_GGSi_ADyxq_Gtr0_lF":{"name":"count(_:_:)","abstract":"<p>Repeat parser &lsquo;n&rsquo; times. If &#39;n&rsquo; == 0 it always succeeds and returns [].</p>"},"Functions.html#/s:14FootlessParser5countyAA0B0VyxSayq_GGSNySiG_ADyxq_Gtr0_lF":{"name":"count(_:_:)","abstract":"<p>Repeat parser as many times as possible within the given range."},"Functions.html#/s:14FootlessParser5countyAA0B0VyxSayq_GGSnySiG_ADyxq_Gtr0_lF":{"name":"count(_:_:)","abstract":"<p>Repeat parser as many times as possible within the given range."},"Functions.html#/s:14FootlessParser5oneOfyAA0B0VyxxGq_SQRz7ElementQy_RszSlR_r0_lF":{"name":"oneOf(_:)","abstract":"<p>Succeed if the next token is in the provided collection.</p>"},"Functions.html#/s:14FootlessParser6noneOfyAA0B0VyxxGq_SQRz7ElementQy_RszSlR_r0_lF":{"name":"noneOf(_:)","abstract":"<p>Succeed if the next token is <em>not</em> in the provided collection.</p>"},"Functions.html#/s:14FootlessParser3notyAA0B0VyxxGxSQRzlF":{"name":"not(_:)","abstract":"<p>Match anything but this.</p>"},"Functions.html#/s:14FootlessParser3eofAA0B0VyxytGylF":{"name":"eof()","abstract":"<p>Verify that input is empty.</p>"},"Functions.html#/s:14FootlessParser4failyAA0B0Vyxq_GAA10ParseErrorOyxGr0_lF":{"name":"fail(_:)","abstract":"<p>Fail with the given error message. Ignores input.</p>"},"Functions.html#/s:14FootlessParser5parseyxAA0B0Vyq_xG_Sayq_GtKr0_lF":{"name":"parse(_:_:)","abstract":"<p>Parse all of input with parser."},"Functions.html#/s:14FootlessParser4charyAA0B0VyS2JGSJF":{"name":"char(_:)","abstract":"<p>Match a single character.</p>"},"Functions.html#/s:14FootlessParser6extendyS2ScSSF":{"name":"extend(_:)","abstract":"<p>Join two strings</p>"},"Functions.html#/s:14FootlessParser6extendyS2ScSJF":{"name":"extend(_:)","abstract":"<p>Join a character with a string.</p>"},"Functions.html#/s:14FootlessParser9oneOrMoreyAA0B0VyxSSGADyxSJGlF":{"name":"oneOrMore(_:)","abstract":"<p>Apply character parser once, then repeat until it fails. Returns a string.</p>"},"Functions.html#/s:14FootlessParser10zeroOrMoreyAA0B0VyxSSGADyxSJGlF":{"name":"zeroOrMore(_:)","abstract":"<p>Repeat character parser until it fails. Returns a string.</p>"},"Functions.html#/s:14FootlessParser5countyAA0B0VyxSSGSi_ADyxSJGtlF":{"name":"count(_:_:)","abstract":"<p>Repeat character parser &lsquo;n&rsquo; times and return as string. If &#39;n&rsquo; == 0 it always succeeds and returns &ldquo;&rdquo;.</p>"},"Functions.html#/s:14FootlessParser5countyAA0B0VyxSSGSNySiG_ADyxSJGtlF":{"name":"count(_:_:)","abstract":"<p>Repeat parser as many times as possible within the given range."},"Functions.html#/s:14FootlessParser5countyAA0B0VyxSSGSnySiG_ADyxSJGtlF":{"name":"count(_:_:)","abstract":"<p>Repeat parser as many times as possible within the given range."},"Functions.html#/s:14FootlessParser6stringyAA0B0VySJSSGSSF":{"name":"string(_:)","abstract":"<p>Match a string</p>"},"Functions.html#/s:14FootlessParser5oneOfyAA0B0VyS2JGSSF":{"name":"oneOf(_:)","abstract":"<p>Succeed if the next character is in the provided string.</p>"},"Functions.html#/s:14FootlessParser6noneOfyAA0B0VyS2JGSSF":{"name":"noneOf(_:)","abstract":"<p>Succeed if the next character is <em>not</em> in the provided string.</p>"},"Functions.html#/s:14FootlessParser6noneOfyAA0B0VyS2JGSaySSGF":{"name":"noneOf(_:)","abstract":"<p>Produces a character if the character and succeeding do not match any of the strings.</p>"},"Functions.html#/s:14FootlessParser4char_4nameAA0B0VyS2JG10Foundation12CharacterSetV_SStF":{"name":"char(_:name:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:14FootlessParser5parseyxAA0B0VySJxG_SStKlF":{"name":"parse(_:_:)","abstract":"<p>Parse all of the string with parser."},"Functions.html#/s:14FootlessParser5print5error2inyAA10ParseErrorOySJG_SStF":{"name":"print(error:in:)","abstract":"<p>Undocumented</p>"},"Enums/ParseError.html#/s:14FootlessParser10ParseErrorO8MismatchyACyxGs13AnyCollectionVyxG_S2StcAEmlF":{"name":"Mismatch(_:_:_:)","abstract":"<p>Undocumented</p>","parent_name":"ParseError"},"Enums/ParseError.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"ParseError"},"Enums/CountError.html#/s:14FootlessParser10CountErrorO08NegativeC0yA2CmF":{"name":"NegativeCount","abstract":"<p>Undocumented</p>","parent_name":"CountError"},"Enums/CountError.html":{"name":"CountError","abstract":"<p>Undocumented</p>"},"Enums/ParseError.html":{"name":"ParseError","abstract":"<p>Undocumented</p>"},"Global Variables.html#/s:14FootlessParser10whitespaceAA0B0VyS2JGvp":{"name":"whitespace","abstract":"<p>Parser that matches all the whitespace characters.</p>"},"Global Variables.html#/s:14FootlessParser7newlineAA0B0VyS2JGvp":{"name":"newline","abstract":"<p>Parser that matches all the newline characters.</p>"},"Global Variables.html#/s:14FootlessParser20whitespacesOrNewlineAA0B0VyS2JGvp":{"name":"whitespacesOrNewline","abstract":"<p>Parser that matches all the whitespace and newline characters.</p>"},"Global Variables.html#/s:14FootlessParser5digitAA0B0VyS2JGvp":{"name":"digit","abstract":"<p>Parser that matches all the decimal digit characters.</p>"},"Global Variables.html#/s:14FootlessParser12alphanumericAA0B0VyS2JGvp":{"name":"alphanumeric","abstract":"<p>Parser that matches all the alphanumeric characters.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}